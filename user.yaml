- name: catalogue
  hosts: catalogue
  become: yes
  tasks:
   - name: disble old nodejs and enable new nodejs
     ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y
   - name: install nodejs
     ansible.builtin.command: dnf install nodejs -y
   - name: create a user
     ansible.builtin.user:
       name: roboshop
   - name: Recursively remove app directory
     ansible.builtin.file:
      path: /app
      state: absent
   - name: create a directory
     ansible.builtin.file:
      path: /app
      state: directory 
   - name: download the application code into app directory
     ansible.builtin.get_url:
      url: hthttps://roboshop-builds.s3.amazonaws.com/user.zip
      dest: /tmp/
   - name: unzip or extact catalogue application in app directory
     ansible.builtin.unarchive:
       src: /tmp/user.zip
       dest: /app
       remote_src: yes 
   - name: install dependencies
     ansible.builtin.command: npm install
     args:
      chdir: /app
   - name: copy catalogue service 
     ansible.builtin.copy:
      src: user.service
      dest: /e/etc/systemd/system/user.service
   - name: daemon reload and start
     ansible.builtin.systemd_service:
      daemon_reload: true
  # start the service after data is loaded
   - name: copy mongo repo
     ansible.builtin.copy:
      src: mongodb.repo
      dest: /etc/yum.repos.d/mongodb.repo
   
   - name: install mongodb client
     ansible.builtin.package:
      name: mongodb-org-shell
      state: present
   - name: get the categories count
     ansible.builtin.command: mongo --host 172.31.91.163 --quiet --eval 'db = db.getSiblingDB("user");db.users.count()'
     register: product_count
   - name: load user data(schema)
     ansible.builtin.command: mongo --host 172.31.91.163 </app/schema/user.js
     when: product_count.stdout == "0"
   - name: start and enable user
     ansible.builtin.service:
       name: user
       state: restarted
       enabled: yes